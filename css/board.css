/* board.css - Board and list styles with drag-and-drop */

.board-container {
    position: relative;
    height: calc(100vh - 120px);
    overflow: hidden;
}

.board-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
}

.board {
    position: relative;
    z-index: 2;
    height: 100%;
    padding: 20px;
    display: flex;
    gap: 20px;
    overflow-x: auto;
    overflow-y: hidden;
}

.list {
    background: #ebecf0;
    border-radius: 8px;
    width: 300px;
    min-width: 300px;
    max-height: calc(100vh - 160px);
    display: flex;
    flex-direction: column;
    cursor: grab;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    position: relative;
}

.list:active {
    cursor: grabbing;
}

/* Drag states */
.list.dragging {
    opacity: 0.6;
    transform: rotate(2deg);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    cursor: grabbing;
}

/* Drop indicators */
.list.drag-over-left::before,
.list.drag-over-right::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: 4px;
    background: #0079bf;
    border-radius: 2px;
    z-index: 10;
    animation: pulse 1s infinite;
}

.list.drag-over-left::before {
    left: -10px;
}

.list.drag-over-right::after {
    right: -10px;
}

@keyframes pulse {
    0%, 100% {
        opacity: 1;
        transform: scaleY(1);
    }
    50% {
        opacity: 0.7;
        transform: scaleY(0.95);
    }
}

/* Board state during drag */
.board.drag-active {
    padding-left: 30px;
    padding-right: 30px;
}

.board.drag-active .list:not(.dragging) {
    transition: transform 0.2s ease;
}

.board.drag-active .list:not(.dragging):hover {
    transform: scale(1.02);
}

.list-header {
    padding: 12px 16px;
    font-weight: 600;
    color: #172b4d;
    background: #ebecf0;
    border-radius: 8px 8px 0 0;
    cursor: grab;
}

.list-header:active {
    cursor: grabbing;
}

.list-header input {
    background: none;
    border: none;
    font-weight: 600;
    font-size: 14px;
    width: 100%;
    color: #172b4d;
    cursor: text;
}

.list-header input:focus {
    outline: 2px solid #0079bf;
    background: white;
    padding: 4px;
    border-radius: 3px;
}

/* Prevent dragging when input is focused */
.list-header input:focus {
    pointer-events: auto;
}

.list:has(.list-header input:focus) {
    cursor: default;
    pointer-events: none;
}

.list:has(.list-header input:focus) .list-header input {
    pointer-events: auto;
}

.cards-container {
    flex: 1;
    overflow-y: auto;
    padding: 0 8px 8px 8px;
    pointer-events: none;
}

.list:not(.dragging) .cards-container {
    pointer-events: auto;
}

.add-list-btn {
    background: rgba(255, 255, 255, 0.24);
    border: none;
    color: white;
    padding: 12px;
    border-radius: 8px;
    cursor: pointer;
    width: 300px;
    min-width: 300px;
    height: fit-content;
    transition: background-color 0.2s ease;
}

.add-list-btn:hover {
    background: rgba(255, 255, 255, 0.32);
}

/* Smooth scrolling for horizontal overflow */
.board {
    scroll-behavior: smooth;
}

/* Better touch support */
@media (hover: none) and (pointer: coarse) {
    .list {
        cursor: default;
    }
    
    .list-header {
        cursor: default;
    }
}
